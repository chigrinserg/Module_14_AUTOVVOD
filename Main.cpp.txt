#include <iostream>
#include <string>
#include <fstream>
#include <vector>
#include <ios>
#include <Windows.h>
#include "Trie.h"
#include "Dictionary.h"

int getInputMethod()/*Функция получения кода раскладки клавиатуры. Возвращает 
		     значение х = 1049 для русской раскладки и х = 1033 -
		     для латинской*/
{
	HWND hwnd = GetForegroundWindow(); 
	if (hwnd)
	{
		DWORD threadID = GetWindowThreadProcessId(hwnd, NULL);
		HKL currentLayout = GetKeyboardLayout(threadID);
		unsigned int x = (unsigned int)currentLayout & 0x0000FFFF;
		return ((int)x);
	}
}

int main()
{
	setlocale(LC_ALL, "Rus");
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);

	int lang = 0; //переменная кода раскладки клавиатуры
	lang = getInputMethod();
	if (lang == 1033)
	{
		std::cout << "ВНИМАНИЕ! Включена ЛАТИНСКАЯ раскладка клавиатуры! Измените раскладку!" << '\n';
		std::cout << "_______________________________________________________________________" << '\n';
		exit(0);
	}
	/*По поводу оператора goto. Данный оператор не рекомендуется к использованию всеми руководствами 
	по С++ как приводящий код в трудночитабельное состояние. Но, по мнению разработчика, это справедливо
	для переходов "на большие расстояния", в другие функции. А вот для условий проверки корректности ввода 
	данных этот оператор подходит весьма неплохо (возврат всего на несколько строк назад внутри одной 
	функции). Существенно упрощается написание кода и функция не перегружается лишними циклами.*/

	Trie T;
	Dictionary d;
	T.insertFromFile_rus(); //Загрузка дерева из текстового файла
	bool repeat{ true };
	while (true)
	{
		std::cout << "ВЫПОЛНЯЕМЫЕ  ОПЕРАЦИИ ДЛЯ РУССКОЯЗЫЧНОЙ ПРОГРАММЫ АВТОДОПОЛНЕНИЯ:" << '\n';
		std::cout << "Дополнение слов - 1; Запись в словарь - 2. Внимание! Вводите только СТРОЧНЫЕ буквы!" << '\n';
		int ax{}; //переменная управления переключением
		nevern_code:
		std::cout << "Введите код операции: ";
		std::cin >> ax;
		if ((ax != 1)&&(ax!=2))
		{
			std::cin.clear(); /*Очистка буфера ввода. Если ее не выполнить, то при ошибочном введении 
							  в переменную ax префикса вместо цифры программа срывается в бесконечный цикл*/
			std::cin.ignore(100, '\n');
			std::cout << "Неверный код! " << '\n';
			goto nevern_code; 
		}
		std::cout << "_________________________________________________" << '\n';
		switch (ax)
		{
		case 1:
			T.console_rus();//Вывод результатов поиска на консоль
			break;
		case 2:
			d.FillArray(); //Дополнение словаря новыми словами
			d.DeleteEmptyLines(); //Удаление пустых строк из файла словаря
			break;
		}
		int z{};
		std::cout << '\n';
		std::cout << "Новая операция - '1', выход - '0'" << '\n';
		std::cin >> z;
		if (z == 1)
		{
			repeat = true;
		}
		else
		{
			repeat = false;
			break;
		}
		system("cls");
	}
	return 0;
}
